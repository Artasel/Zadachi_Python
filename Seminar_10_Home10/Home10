'''
Решить задачи, которые не успели решить на семинаре.
Доработаем задачи 5-6. Создайте класс-фабрику.
○ Класс принимает тип животного (название одного из созданных классов)
и параметры для этого типа.
○ Внутри класса создайте экземпляр на основе переданного типа и
верните его из класса-фабрики.
Возьмите 1-3 любые задачи из прошлых семинаров (например сериализация
данных), которые вы уже решали. Превратите функции в методы класса, а
параметры в свойства. Задачи должны решаться через вызов методов
экземпляра.
'''

class Horse:
    def __init__(self, name, age, power):
        self.name = name
        self.age = age
        self.power = power

    def get_name(self):
        return self.name

    def get_power(self):
        return self.power
    
    def get_age(self):
        return self.age

class factory:
    def __init__(self, name_class, name, age, power):
        self.name_class = name_class
        self.name = name
        self.age = age
        self.power = power

    def get_class_instance(self):
        return self.name_class(self.name, self.age, self.power)
    


class method:
    def __init__(self, num):
        self.num = num

    def get_result(self):
        hexadecimalS = 16
        diction = {10: 'a', 11: 'b', 12: 'c', 13: 'd', 14: 'e', 15: 'f'}
        result = ""
        while self.num > 0:
            res = self.num % hexadecimalS
            if res in diction:
                result = diction[res] + result
            else:
                result = str(res) + result
            self.num //= hexadecimalS
        return result


we = factory(Horse, 'Blacky', 12, 'jump')
qwe = we.get_class_instance()
print(qwe.get_age())

number =12345
qwe = method(12345)
print(f'{qwe.get_result()} == {hex(number)[2:]}')